---
name: CI

run-name: >-
  ${{
    inputs.release && inputs.test && 'CI ➤ Test ➤ Release' ||
    inputs.test && 'CI ➤ Test' ||
    inputs.release && 'CI ➤ Release' ||
    ''
  }}

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      test:
        description: Test
        required: true
        default: true
        type: boolean
      release:
        description: Release
        required: true
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read # for checkout

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      TURBO_TEAM: sanity-io
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@0b715c7ebbf3cf2174d1386336c5f6d3d8d5504a # v2.3.0
      - uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version: lts/*
      - run: corepack enable && pnpm --version
      - run: pnpm install
      - run: pnpm lint
      - run: pnpm run -r prepublishOnly
        if: github.event.inputs.test != 'false'

  test:
    needs: build
    # The test matrix can be skipped, in case a new release needs to be fast-tracked and tests are already passing on main
    if: github.event.inputs.test != 'false'
    timeout-minutes: 15
    strategy:
      # A test failing on windows doesn't mean it'll fail on macos. It's useful to let all tests run to its completion to get the full picture
      fail-fast: false
      matrix:
        # https://nodejs.org/en/about/releases/
        # https://pnpm.io/installation#compatibility
        # Includes the lowest version supported by preview-kit (defined in pkg.engines.node) and the upcoming version in development
        node: [lts/-1, lts/*, current]
        os: [ubuntu-latest]
        # Also test the LTS on mac and windows
        include:
          - os: macos-latest
            node: lts/*
          - os: windows-latest
            node: lts/*
    runs-on: ${{ matrix.os }}
    env:
      NODE_VERSION: ${{ matrix.node }}
      TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      TURBO_TEAM: sanity-io
    steps:
      # It's only necessary to do this for windows, as mac and ubuntu are sane OS's that already use LF
      - if: matrix.os == 'windows-latest'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@0b715c7ebbf3cf2174d1386336c5f6d3d8d5504a # v2.3.0
      - uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version: ${{ matrix.node }}
      - run: corepack enable && pnpm --version
      - run: pnpm install --loglevel=error
      - run: pnpm test
      - run: pnpm test:esm

  release:
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    needs: [build, test]
    # only run if opt-in during workflow_dispatch
    if: always() && github.event.inputs.release == 'true' && needs.build.result != 'failure' && needs.test.result != 'failure' && needs.test.result != 'cancelled'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Need to fetch entire commit history to
          # analyze every commit since last release
          fetch-depth: 0
      - uses: pnpm/action-setup@0b715c7ebbf3cf2174d1386336c5f6d3d8d5504a # v2.3.0
      - uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version: lts/*
      - run: corepack enable && pnpm --version
      - run: pnpm install --loglevel=error
      - run: pnpm run -r release
        # Don't allow interrupting the release step if the job is cancelled, as it can lead to an inconsistent state
        # e.g. git tags were pushed but it exited before `npm publish`
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
